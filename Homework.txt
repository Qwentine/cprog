Please send the source(.zip archive if multiple files) to kucerj17@fel.cvut.cz.

Homework #1

Write a "multiplatform" program which shows the compiler and the operating system used to compile the program. The program refuses to compile if no known compiler found.

Hints:
Use the conditional compilation. 

The code does not have to be too complex, just pick a few compilers/OSs to demonstrate the principles (the one You use and at least one more). Be sure to include GCC/Linux.

Helpful links:
https://sourceforge.net/p/predef/wiki/Home/
http://nadeausoftware.com/articles/2012/10/c_c_tip_how_detect_compiler_name_and_version_using_compiler_predefined_macros


Homework #2

Write a program which computes the the volume and surface of some basic geometrical objects(cube, sphere, cylinder). Separate the source into several .c/.h files one for each object.

Hints:
Do not bother with entering the data by user. The dimensions can be hard-coded, but use a separate header file for it.
Do the upper using at least two of following methods:
 1. Manual compile command
 2. make+Makefile
 3. Your favourite IDE

Homework #3

(1)
Write a function:

*int SumArrays(int *arr1,int *arr2,  int dim1,int dim2)

the function takes two arrays(by references) of integers(+ their dimmensions) and creates one new dynamic array which will contain the summation of those arrays. Write a simple program to demonstrate the work of the function.

(2)
Create a structure named "PointInSpace" able to hold coordinates of one point in three dimmensional space. Write a function that will be able to move that point in space (by given x,z,y).

write the function:
1- that will take the point(structure) by value and retunrn the structure of same type
2- that will take the point by reference and put the result in the original point  

Homework #4

Write a function that converts a string containing an imaginary number (ie. "5+3i") into a structure (IMAG). The function returns a pointer to a new dynamically allocated structure on success or NULL if the conversion has failed.

typedef struct
{
float re;
float im;
}IMAG;

Write a function that returns the sum of two IMAGINARY structures.

Write a program that lets the user enter two imaginary numbers (one by line) and computes their sum (demonstrating the use of upper functions).

Homework #5

-define a structure named "POLY" which represents a polynomial a*x^2 + b*x +c
-write a function:
 POLY* StrToPoly(char* input)
 the function reads the given sting and tries to convert it into a dynamically allocated POLY structure, returns NULL if fails. Try to make the conversion as universal and bulletproof as possible (3x^2+2x+5; 3 x ^ 2 + 2 x + 5; 3*x^2+2*x+5, 3*x^2-2*x - 5; etc. are all valid polynomial inputs )
-write a function:
 float IntegralOfPol(POLY poly, float dimA, float dimB)
 which returns a definite integral of given polynomial at given dimensions
-write a program that lets the user enter a polynomial/dimensions and returns the definite integral. The user is asked for a new input if the input conversion fails.


Homework #6
Write a function that sorts (ascending) the linked list from lab5 (see the github). The three fastest (in terms of computation) solutions grant their authors an excellent test mark with no need to write the final test at all.

Requirements:
- Any working solution is acceptable as homework but for "no test challenge" only those which do not require any supplemental memory (ie. side copy of whole list as an array of int, etc) will be accepted.
- In case of same or similar solutions the one which was submitted earlier counts.
